define(["jquery","angular","angular-route"],function(a){"use strict";function b(a,b,c,d,e){e||(e={}),a.formModel=e,a.formClasses={},a.formErrors={},a.checkField=function(b){var c=a["check_"+b];if(c)c.call(a);else{var d=a.form[b];d.$valid?a.formClasses[b]="has-success":d.$dirty&&(a.formErrors[b]=b+" is not valid",a.formClasses[b]="has-error")}},a.showErrors=function(){a.form.$error},a.processForm=function(){if(a.form.$invalid)return a.showErrors();var c={url:b.attr("action"),method:b.attr("method")||"POST",data:a.formModel},e=b.attr("enctype");e&&(c.headers={"Content-Type":e}),d(c).success(function(b){console.log(b),b.success?a.message=b.message:(a.message=b.message,b.errors?_(b.errors).forEach(function(){}):b.html_url&&(window.location.href=b.html_url))})}}var c={},d={},e=window,f=[];return context=angular.extend(d,e.context),c.$=a,c.context=context,c.services=angular.module("lux.services",[]),c.controllers=angular.module("lux.controllers",["lux.services"]),c.app=angular.module("lux",["ngRoute","lux.controllers","lux.services"]),c.ready_callbacks=[],c.addRoute=function(a,b){f.push([a,b])},angular.element(document).ready(function(){if(f.length&&context.html5){var a=f;f=[],c.setupRouter(a)}angular.bootstrap(document,["lux"]);var b=c.ready_callbacks;c.ready_callbacks=[],angular.forEach(b,function(a){a()})}),c.setupRouter=function(b){c.app.config(["$routeProvider","$locationProvider",function(c,d){angular.forEach(b,function(b){var d=(b[0],b[1]);a.isFunction(d)&&(d=d()),c.when("/",d)}),d.html5Mode(!0)}])},c.controllers.controller("page",["$scope","$http","$location",function(b){angular.extend(b,context),b.search_text="",b.logout=function(b,c){b.preventDefault(),b.stopPropagation(),a.post(c).success(function(a){a.redirect&&window.location.replace(a.redirect)})},b.search=function(){b.search_text&&(window.location.href="/search?"+a.param({q:b.search_text}))}}]),c.app.directive("watchChange",function(){return{scope:{onchange:"&watchChange"},link:function(a,b){b.on("keyup",function(){a.$apply(function(){a.onchange()})}),b.on("change",function(){a.$apply(function(){a.onchange()})})}}}),c.controllers.controller("userController",["$scope","$element","$location","$http",function(c,d,e,f){b(c,d,e,f),c.unlink=function(b,c){b.preventDefault(),b.stopPropagation();var d="/oauth/"+c+"/remove";a.post(d).success(function(a){a.success&&$route.reload()})},c.check_password_repeat=function(){var a=this.formModel,b=this.form.password_repeat,c=a.password,d=a.password_repeat;c!==d&&b.$dirty?(this.formErrors.password_repeat="passwords don't match",b.$error.password_repeat=!0,this.formClasses.password_repeat="has-error"):b.$dirty&&(this.formClasses.password_repeat="has-success",delete this.form.$error.password_repeat)}}]),c});