@import '../variables/common';
@import '../variables/navbar';
@import '../variables/sidebar';
@import '../mixins/mixins';

.sidebar {
    @include transform(translateX(-250px));
    background-color: $sidebar-background-color;
    .nav-panel {
        background-color: $sidebar-panel-bg-color;
        @media (min-width: $screen-sm-min) {
            height: $navbar-height;
        }
        .image > img {
            height: $navbar_height - 10px;
            margin: 2px 5px 0 10px;
        }
    }
    .sidebar-menu {
        .treeview-menu {
            transition: 0.3s $ease-in-out-quad;
            &.active {
                max-height: 5000px;
                transition: 0.3s $ease-in-out-quad;
                > li > a {
                    opacity: 1;
                }
            }
        }
        li {
            transition: 0.3s $ease-in-out-quad;
        }
        > li {
            &.header,
            > a:hover,
            &.active > a  {
                background-color: $sidebar-active-link-bg-color;
                color: $sidebar-active-link-color;
            }
            > a {
                transition: 0.2s;
            }
            .treeview-menu {
                background-color: $sidebar-submenu-bg-color;
                > li {
                    > a {
                        opacity: 0;
                        transition: 0.3s $ease-in-out-quad;
                        color: $sidebar-submenu-link-color;
                        &:hover {
                            color: $sidebar-submenu-active-link-color;
                        }
                    }
                    &.active > a {
                        color: $sidebar-submenu-active-link-color;
                    }
                }
            }
        }
    }
}

.sidebar, .sidebar-page,
.sidebar-navbar > nav,
.sidebar-open-left .sidebar-page,
.sidebar-open-left .sidebar-navbar > nav {
    transition: 0.3s $ease-in-out-quad;
}

// Breakpoint at which the sidebar will stay open.
// Used a mixin as the relevant styles have to be included again
// inside .sidebar-open-left. This is so they take effect when the user has the
// sidebar open but resizes their screen into this breakpoint
@media (min-width: $screen-xl-min) {

    @mixin stayOpenSidebar() {
        .sidebar, .sidebar.sidebar-left {
            @include transform(translate(0, 0));
        }

        .sidebar-navbar {
            .navbar {
                width: calc(100% - #{$sidebar-width});
                @include transform(translateX($sidebar-width));
            }
        }

        .overlay,
        .navbar .navbar-nav>li>a.sidebar-toggle {
            display: none;
        }

        .sidebar-page {
            padding-left: $sidebar-width;
        }
    }

    @include stayOpenSidebar();

    .sidebar-open-left {
        @include stayOpenSidebar();
        .sidebar-page {
            @include transform(translate(0, 0));
        }
    }

}
