define(["lux-web","qunit"],function(){"use strict";var a=lux.web,b=function(a){var b=(a.element(),a.extension()),c=a.id();equal(b.instance(a),a),equal(b.instance(c),a),a.destroy(),equal(b.instance(c),void 0)},c=lux.Model.extend({meta:{name:"todo1",attributes:{title:null,description:null,when:lux.utils.asDate}}}),d=lux.Model.extend({meta:{name:"todo2",attributes:{title:null,description:null,when:lux.utils.asDate}}});module("lux"),test("lux",function(){equal(typeof lux,"object","Lux is an object"),equal(typeof lux.utils,"object","lux.utils. is an object"),equal(typeof lux.Ordered,"function","Test Ordered collections");var a=new lux.Ordered;equal(a.size(),0)}),test("SkipList",function(){var a=new lux.SkipList;equal(a.length,0,"skiplist has 0 length"),equal(a.insert(4,"ciao"),1),equal(a.insert(2,"foo"),2),equal(a.insert(8,"pippo"),3),equal(a.length,3,"skiplist has 3 elements");var b=[];a.forEach(function(a){b.push(a)}),equal(b[0],"foo","Correct first value"),equal(b[1],"ciao","Correct second value"),equal(b[2],"pippo","Correct third value")}),module("lux.utils"),test("allClasses",function(){var a=lux.utils.allClasses,b=$("<div>");ok(_.isArray(a(b))),equal(a(b).length,0),b.addClass("bla foo");var c=a(b);equal(c.length,2)}),test("urljoin",function(){var a=lux.utils.urljoin;equal(a("bla","foo"),"bla/foo","Got bla/foo"),equal(a("bla/","//foo.com","","//","pippo"),"bla/foo.com/pippo","Got bla/foo.com/pippo"),equal(a("http://bla/","//foo.com","","//","pippo"),"http://bla/foo.com/pippo","Got http://bla/foo.com/pippo")}),module("lux.utils.logger"),test("logger",function(){var a=lux.utils.Logger;equal(typeof a,"function","Logger is a function");var b=new a;equal(b.handlers.length,0,"No handlers");var c=$("<div/>"),d=b.addElement(c);equal(b.handlers.length,1,"1 handler"),equal(b.handlers[0],d,"handler in handlers"),b.debug("ciao");var e=c.html();equal(e,"","HTML handler debug"),c.empty(),b.info("ciao"),e=c.html(),equal(e,'<pre class="lux-logger info">info: ciao</pre>',"HTML handler info"),c.empty(),b.warning("ciao"),e=c.html(),equal(e,'<pre class="lux-logger warning">warning: ciao</pre>',"HTML handler warning"),c.empty(),b.error("ciao"),e=c.html(),equal(e,'<pre class="lux-logger error">error: ciao</pre>',"HTML handler error"),c.empty()}),module("lux.Model"),test("Class",function(){var a=lux.Class;equal(typeof a,"function","Class is an function"),equal(typeof a.__class__,"function","Class metaclass is an function");var b=a.extend({hi:function(){return"I'm a test"}}),c=b.extend({init:function(a){this.name=a},hi:function(){return this._super()+" 2"},toString:function(){return this.name}});c.create2=function(){var a=new c("create2");return a};var d=new b,e=new c("luca");ok(d instanceof b,"test1 is instance of TestClass"),ok(d instanceof a,"test1 is instance of Class"),ok(!(d instanceof c),"test1 not an instance of TestClass2"),ok(e instanceof b,"test2 is instance of TestClass"),ok(e instanceof a,"test2 is instance of Class"),ok(e instanceof c,"test2 is an instance of TestClass2"),equal(d.hi(),"I'm a test"),equal(e.hi(),"I'm a test 2"),ok(typeof c.create2,"function","TestClass2.create2 is an function");var f=c.create2();ok(f instanceof b,"test3 is instance of TestClass"),ok(f instanceof a,"test3 is instance of Class"),ok(f instanceof c,"test3 is an instance of TestClass2");var g=c.extend({test:c,init:function(a,b){this._super(a),this.surname=b}}),h=new g("luca","sbardella");equal(h.test,c,"Test class as attribute of a class"),equal(h.name,"luca"),equal(h.surname,"sbardella"),equal(h.test,c)}),test("Type",function(){var a=lux.Type,b=lux.Class;equal(typeof a,"function","Type is an function");var c=a.extend({new_class:function(a,b){var c=this._super(a,b);return c.prototype.meta_attr="OK",c}}),d=b.extend({Metaclass:c,hi:function(){return"I'm a test"}});equal(d.prototype.meta_attr,"OK","meta attribute is set");var e=new d;ok(e instanceof d,"test is instance of TestClass"),ok(e instanceof b,"test is instance of Class"),equal(e.meta_attr,"OK");var f=d.extend({hi:function(){return this._super()+" 2"}}),g=new f;equal(g.meta_attr,"OK"),equal(g.hi(),"I'm a test 2")}),test("Model",function(){var a=lux.Model;equal(typeof a,"function","Type is an function");var b=a.prototype._meta;equal(a._meta,b,"_meta attribute available both in constructor as well as prototype"),equal(b.model,a,"meta model attribute is equal to Model"),equal(b.pkname,"id"),equal(b.name,"model"),equal(b.title,"model");var c=a.extend({meta:{name:"book"}});b=c.prototype._meta,equal(b.pkname,"id"),equal(b.name,"book"),equal(b.title,"book");var d=new c({pages:200});ok(void 0===d.pk(),"book "+d+" has a no pk value"),ok(d.id(),"... it has an id value"),ok(d.isNew(),"... it is new"),equal(d.get("pages"),200,"... it has 200 pages."),equal(d._meta,b,"... it has same meta as constructor"),equal(b.live(d.id()),d,"... it is in live instances"),equal(_.size(d.changedFields()),0,"... no fields have changed"),d.set("year",200),equal(_.size(d.changedFields()),1,"... fields have changed");var e=a.extend({}),f=e._meta;equal(f.name,"model","meta attribute does not inherit.");var g=a.extend({meta:{name:"page",plugins:{}}});equal(g._meta.pkname,"id"),equal(g._meta.name,"page"),equal(Object(g._meta.plugins),g._meta.plugins,"Page model has plugins attribute in meta")}),module("lux.web.select"),test("select",function(){equal(typeof a.select,"function","lux.web.dialog is an function");var c=a.select();equal(c.name,"select");var d=c.element();equal(d.prop("tagName"),"SELECT");var e=(c.select2(),c.container());ok(d[0]!==e[0],"Different container"),b(c)}),module("lux.web.dialog"),test("dialog",function(){equal(typeof a.dialog,"function","lux.web.dialog is an function");var c=a.dialog({title:"Hello World!"});equal(c.name,"dialog"),equal(c.buttons.children().length,0,"No buttons"),ok(!c.options.closable,"dialog is not closable"),c.closable(),ok(c.options.closable,"dialog is closable"),equal(c.buttons.children().length,1,"One button"),b(c)}),module("lux.web.backends");var e=lux.Class.extend({init:function(a,b,c,d){this.Todo=a,this.expect=c||27,this.timeout=d||5,this.failure=!1,this.backend=b},check:function(){var a=this;_.size(this.backend._pending_messages)&&!this.failure?lux.eventloop.call_later(.1,function(){a.check()}):(this.timeout?this.timeout.cancel():ok(!1,"Timeout occurred"),start())},start:function(){var a=this,b=this.backend,c=this.Todo;b.send({action:"ping",success:function(a,c,d){equal(a,"pong","websocket ping got pong"),equal(c,b),equal(d.data,a),equal(d.action,"ping")}}),b.send({action:"pippo",error:function(a,b,c){equal(a,'Unknown "pippo" action.','Unknown "pippo" action.'),equal(a,c.error),equal(c.action,"pippo")}}),c._meta.set_transport(b),equal(c._meta._backend,b);var d=new c({title:"write more tests"});ok(d.isNew(),"instance "+d+" is new"),ok(!d.pk(),"... and has no primary key"),ok(d.id(),"... and its id is "+d.id()),equal(d,d._meta.live(d.id()),"... and it is in live instances"),equal(d.get("title"),"write more tests","... and has valid field"),equal(_.size(d.fields()),1,"... and has only one field"),equal(d.fields().title,d.get("title")),d.sync({success:function(){ok(!d.isNew(),"Model "+d+" is persistent"),equal(d.get("id"),d.pk(),"... id and pk are the same: "+d.pk()),a.test_update(d)}}),this.check()},test_update:function(a){equal(_.size(a.changedFields()),0,"... it has 0 changes");var b=this,c=new Date(2020,1,1),d=c.getTime();a.set("when",c);var e=a.changedFields();equal(_.size(e),1,"... now it has 1 change"),a.sync({success:function(){equal(a.get("when").getTime(),d," ... it has the right date after update"),b.test_get(a.pk())}})},test_get:function(a){var b=this.Todo,c=b._meta.live();equal(c.length,1,"There is 1 value in the live elements");new b;c=b._meta.live(),equal(c.length,2,"There are 2 values in the live elements"),b._meta.clear(),c=b._meta.live(),equal(c.length,0,"There are 0 values in the live elements"),b._meta.get(a,{success:function(b){equal(b.length,1,"One instance fetched");var c=b[0];equal(c.id(),a,"Same id"),equal(_.size(c.fields()),3,"It has three fields")}})}}),f={local:e.extend({init:function(){var a=new lux.Storage({type:"session"});this._super(c,a)},start:function(){equal(this.backend.options.type,"session","Local storage is session based"),this._super()}}),websocket:e.extend({init:function(){this._super(d)},start:function(a){if(a)this.backend=a,equal(a.options.reconnecting,0,"Reconnecting is 0"),this._super();else{var b=this;new lux.Socket("socket",{reconnecting:0,onopen:function(){b.start(this)}})}}})};_(f).forEach(function(a,b){var c=new a;asyncTest(b+" backend",c.expect,function(){c.timeout=lux.eventloop.call_later(c.timeout,function(){c.timeout=null,c.failure=!0}),c.start()})}),module("lux.cms"),test("Content",function(){var a=lux.cms,b=a.Content;equal(b._meta.name,"content","Content meta name is content"),b._meta.set_transport(new lux.Storage({type:"session"})),equal(b._meta._backend.storage,sessionStorage,"Backend on sessionStorage");var c=a.RowView,d=new c;ok(d instanceof a.ContentView,"Testing RowView class")})});