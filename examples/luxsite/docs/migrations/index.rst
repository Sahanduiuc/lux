.. _migrations:

==========
Migrations
==========

.. contents:: Table of Contents

Lux use `Alembic <https://alembic.readthedocs.org/en/latest/>`_ as tool
to provide migrations. It integrate all alembic commands inside
``manage.py`` and gather configuration from project's config file.

**NOTE:** This documentation assume that you know Alembic and its usage.

+-----------------------------------------------------------------------------+
| IMPORTANT                                                                   |
+=============================================================================+
| If you will use autogenerated mgrations **ALWAYS** check the outputs, as    |
| the mechanism is not bugfree and may contains errors that needs to be fixed |
| manually.                                                                   |
+-----------------------------------------------------------------------------+

Requirements
============

In order to be able to use migrations you need to have Alembic installed::

    pip install alembic

When Alembic is already installed, you can now use
``manage.py alembic -h`` to get all possible commands.

Configuration
=============

Lux provide default configuration that will works with some limitation.

Default settings
~~~~~~~~~~~~~~~~

1. ``script_location`` points to core project directory.
2. autogenerate migrations are unavailable.
3. logging is set to default project's logging.

Custom settings
~~~~~~~~~~~~~~~

If you wish to overwrite default setting, you have to define ``MIGRATIONS``
dict in your config file.

To overwrite main alembic settings create ``alembic`` key: ::

    MIGRATIONS = {
        'alembic': {
            'script_location': './migartions',
            ...
        }
    }

Refer to `Alembic .ini <https://goo.gl/Zeam9i>`_ to get available options.

To turn on autogenerate migrations put: ::

    MIGRATIONS = {
        'alembic': {
            'script_location': './migartions',
            ...
        },
        'metadata': {
            '<db_name>': '<project_name>.<app_name>.models.Base'
        }
    }

More info can be found in `Alembic Auto Generating Migrations
<https://alembic.readthedocs.org/en/latest/autogenerate.html>`_'

To change logging behaviour provide: ::

    MIGRATIONS = {
        'alembic': {
            'script_location': './migartions',
            ...
        },
        'metadata': {
            '<db_name>': '<project_name>.<module_name>.models.Base'
        },
        'logging': {
            'path': '<path_to_logging_config_file>'
        }
    }

You have to provide proper config file for logging. Refer to
`Python logging <https://goo.gl/4s669q>`_

Editing env.py
===============

The ``env.py`` file is customized to read from ``MIGRATIONS`` settings.
You may change it to achieve desired logic. You are doing it on own risk!

Console commands
================

Lux provide a command line ``migration.py alembic`` that provide almost the
same sets of commands as Alembic. The main difference is that there is no
command ``list_templates`` as lux provide only one default template.
Also there is one new command ``auto``.

The ``auto`` command is in fact only abbreviation for: ::

    alembic revision --autogenerate

Anything else is similar to alembic commands.


